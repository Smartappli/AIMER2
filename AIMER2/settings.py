"""
Django settings for AIMER2 project.

Generated by 'django-admin startproject' using Django 5.1.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from django.utils.translation import gettext_lazy as _
from pathlib import Path

from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

SITE_ID = 1

# Application definition

INSTALLED_APPS = [
    "django_celery_beat",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.postgres",
    "rosetta",
    "taggit",
    "website.apps.WebsiteConfig",
    "blog.apps.BlogConfig",
    # 'faq.apps.FaqConfig',
    # 'ticket.apps.TicketConfig',
    # 'tutorial.apps.TutorialConfig',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "AIMER2.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates", BASE_DIR / "templatetags"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "AIMER2.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    },
    # blog": {
    #    "ENGINE": "django.db.backends.postgresql",
    #    "NAME": config("GLOB_DB_NAME"),
    #    "USER": config("BLOG_DB_USER"),
    #    "PASSWORD": config("BLOG_DB_PASSWORD"),
    #    "HOST": config("BLOG_DB_HOST"),
    # },
    # "faq": {
    #    "ENGINE": "django.db.backends.postgresql",
    #    "NAME": config("FAQ_DB_NAME"),
    #    "USER": config("FAQ_DB_USER"),
    #    "PASSWORD": config("FAQ_DB_PASSWORD"),
    #    "HOST": config("FAQ_DB_HOST"),
    # },
    # "ticket": {
    #    "ENGINE": "django.db.backends.postgresql",
    #    "NAME": config("TICKET_DB_NAME"),
    #    "USER": config("TICKET_DB_USER"),
    #    "PASSWORD": config("TICKET_DB_PASSWORD"),
    #    "HOST": config("TICKET_DB_HOST"),
    # },
    # "tutorial": {
    #    "ENGINE": "django.db.backends.postgresql",
    #    "NAME": config("TUTORIAL_DB_NAME"),
    #    "USER": config("TUTORIAL_DB_USER"),
    #    "PASSWORD": config("TUTORIAL_DB_PASSWORD"),
    #    "HOST": config("TUTORIAL_DB_HOST"),
    # },
    # "website": {
    #    "ENGINE": "django.db.backends.postgresql",
    #    "NAME": config("WEBSITE_DB_NAME"),
    #    "USER": config("WEBSITE_DB_USER"),
    #    "PASSWORD": config("WEBSITE_DB_PASSWORD"),
    #    "HOST": config("WEBSITE_DB_HOST"),
    # },
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.dummy.DummyCache",
    }
}

LANGUAGES = (
    ("af", _("Afrikaans")),
    ("ak", _("Akan")),
    ("ar", _("Arabic")),
    ("bg", _("Bulgarian")),
    ("br", _("Brazilian")),
    ("cz", _("Czech")),
    ("da", _("Danish")),
    ("de", _("German")),
    ("ee", _("Estonian")),
    ("en", _("English")),
    ("es", _("Spanish")),
    ("fa", _("Farsi")),
    ("fi", _("Finnish")),
    ("fr", _("French")),
    ("gr", _("Greek")),
    ("he", _("Hebrew")),
    ("hi", _("Hindi")),
    ("hu", _("Hungarian")),
    ("hr", _("Croatian")),
    ("hy", _("Armenian")),
    ("id", _("Indonesian")),
    ("it", _("Italian")),
    ("ja", _("Japanese")),
    ("km", _("Khmer")),
    ("lt", _("Lithuanian")),
    ("lv", _("Latvian")),
    ("ko", _("Korean")),
    ("mn", _("Mongolian")),
    ("nl", _("Dutch")),
    ("no", _("Norwegian")),
    ("pl", _("Polish")),
    ("pt", _("Portuguese")),
    ("ro", _("Romanian")),
    ("ru", _("Russian")),
    ("se", _("Swedish")),
    ("si", _("Slovenian")),
    ("sk", _("Slovak")),
    ("sq", _("Albanian")),
    ("sr", _("Serbian")),
    ("th", _("Thai")),
    ("tr", _("Turkish")),
    ("uk", _("Ukrainian")),
    ("vi", _("Vietnamese")),
    ("yi", _("Yiddish")),
    ("zh", _("Simplified Chinese")),
)

LOCALE_PATHS = (BASE_DIR / "locale",)


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [BASE_DIR / "static/"]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Email server configuration
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_HOST = config("EMAIL_HOST")
EMAIL_HOST_USER = config("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD")
EMAIL_PORT = config("EMAIL_PORT")
EMAIL_USE_TLS = config("EMAIL_USE_TLS")
DEFAULT_FROM_EMAIL = config("DEFAULT_FROM_EMAIL")

LOGIN_REDIRECT_URL = "../"
LOGIN_URL = "login/"
LOGOUT_URL = "logout/"

MEDIA_URL = "media/"
MEDIA_ROOT = BASE_DIR / "media"
