"""Django settings for AIMER2 project.

Generated by 'django-admin startproject' using Django 5.1.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

from decouple import config
from django.utils.translation import gettext_lazy as _

from .template import TEMPLATE_CONFIG, THEME_LAYOUT_DIR, THEME_VARIABLES

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", "True").lower() in ["true", "yes", "1"]

# https://docs.djangoproject.com/en/dev/ref/settings/#allowed-hosts
ALLOWED_HOSTS = ["localhost", "127.0.0.1"]

# Current DJANGO_ENVIRONMENT
ENVIRONMENT = config("DJANGO_ENVIRONMENT")

SITE_ID = 1

# Application definition
INSTALLED_APPS = [
    "blog.apps.BlogConfig",
    "celerybeat_status",
    "chat.apps.ChatConfig",
    "daphne",
    "django_celery_beat",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.postgres",
    "django_countries",
    "embed_video",
    "faq.apps.FaqConfig",
    "pages.apps.PagesConfig",
    "redisboard",
    "rest_framework",
    "rosetta",
    "students.apps.StudentsConfig",
    "taggit",
    # "ticket.apps.TicketConfig",
    "tutorial.apps.TutorialConfig",
    "website.apps.WebsiteConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "AIMER2.language_middleware.DefaultLanguageMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "AIMER2.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "AIMER2.context_processors.language_code",
                "AIMER2.context_processors.my_setting",
                "AIMER2.context_processors.get_cookie",
                "AIMER2.context_processors.environment",
            ],
            "libraries": {
                "theme": "AIMER2.template_tags.theme",
            },
            "builtins": [
                "django.templatetags.static",
                "AIMER2.template_tags.theme",
            ],
        },
    },
]

WSGI_APPLICATION = "AIMER2.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    },
    # blog": {
    #    "ENGINE": "django.db.backends.postgresql",
    #    "NAME": config("GLOB_DB_NAME"),
    #    "USER": config("BLOG_DB_USER"),
    #    "PASSWORD": config("BLOG_DB_PASSWORD"),
    #    "HOST": config("BLOG_DB_HOST"),
    # .    "OPTIONS": {
    #         "pool": {
    #            "min_size": 2,
    #            "max_size": 4,
    #            "timeout": 500,
    #        }
    #    },
    # },
    # "faq": {
    #    "ENGINE": "django.db.backends.postgresql",
    #    "NAME": config("FAQ_DB_NAME"),
    #    "USER": config("FAQ_DB_USER"),
    #    "PASSWORD": config("FAQ_DB_PASSWORD"),
    #    "HOST": config("FAQ_DB_HOST"),
    #    "OPTIONS": {
    #        "pool": {
    #            "min_size": 2,
    #            "max_size": 4,
    #            "timeout": 10,
    #        }
    #    },
    # },
    # "ticket": {
    #    "ENGINE": "django.db.backends.postgresql",
    #    "NAME": config("TICKET_DB_NAME"),
    #    "USER": config("TICKET_DB_USER"),
    #    "PASSWORD": config("TICKET_DB_PASSWORD"),
    #    "HOST": config("TICKET_DB_HOST"),
    #    "OPTIONS": {
    #        "pool": {
    #            "min_size": 2,
    #            "max_size": 4,
    #            "timeout": 10,
    #        }
    #    },
    # },
    # "tutorial": {
    #    "ENGINE": "django.db.backends.postgresql",
    #    "NAME": config("TUTORIAL_DB_NAME"),
    #    "USER": config("TUTORIAL_DB_USER"),
    #    "PASSWORD": config("TUTORIAL_DB_PASSWORD"),
    #    "HOST": config("TUTORIAL_DB_HOST"),
    # .   "OPTIONS": {
    #        "pool": {
    #            "min_size": 2,
    #            "max_size": 4,
    #            "timeout": 10,
    #        }
    #    },
    # },
    # "website": {
    #    "ENGINE": "django.db.backends.postgresql",
    #    "NAME": config("WEBSITE_DB_NAME"),
    #    "USER": config("WEBSITE_DB_USER"),
    #    "PASSWORD": config("WEBSITE_DB_PASSWORD"),
    #    "HOST": config("WEBSITE_DB_HOST"),
    # .   "OPTIONS": {
    #        "pool": {
    #            "min_size": 2,
    #            "max_size": 4,
    #            "timeout": 10,
    #        }
    #    },
    # },
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.dummy.DummyCache",
    },
}

CACHE_MIDDLEWARE_ALIAS = "default"
CACHE_MIDDLEWARE_SECONDS = 60 * 15  # 15 minutes
CACHE_MIDDLEWARE_KEY_PREFIX = "aimer2"

LANGUAGES = (
    # ("af", _("Afrikaans")),
    ("ar", _("Arabic")),
    # ("ar-dz", _("Algerian Arabic")),
    # ("ast", _("Asturian")),
    # ("az", _("Azerbaijani")),
    ("bg", _("Bulgarian")),
    # ("be", _("Belarusian")),
    # ("bn", _("Bengali")),
    # ("br", _("Breton")),
    # ("bs", _("Bosnian")),
    # ("ca", _("Catalan")),
    # ("ckb", _("Central Kurdish (Sorani)")),
    ("cs", _("Czech")),
    # ("cy", _("Welsh")),
    ("da", _("Danish")),
    ("de", _("German")),
    # ("dsb", _("Lower Sorbian")),
    ("el", _("Greek")),
    ("en", _("English")),
    # ("en-au", _("Australian English")),
    ("en-gb", _("British English")),
    # ("eo", _("Esperanto")),
    ("es", _("Spanish")),
    # ("es-ar", _("Argentinian Spanish")),
    # ("es-co", _("Colombian Spanish")),
    # ("es-mx", _("Mexican Spanish")),
    # ("es-ni", _("Nicaraguan Spanish")),
    # ("es-ve", _("Venezuelan Spanish")),
    ("et", _("Estonian")),
    # ("eu", _("Basque")),
    # ("fa", _("Persian")),
    ("fi", _("Finnish")),
    ("fr", _("French")),
    # ("fy", _("Frisian")),
    # ("ga", _("Irish")),
    # ("gd", _("Scottish Gaelic")),
    # ("gl", _("Galician")),
    # ("he", _("Hebrew")),
    # ("hi", _("Hindi")),
    # ("hr", _("Croatian")),
    # ("hsb", _("Upper Sorbian")),
    ("hu", _("Hungarian")),
    # ("hy", _("Armenian")),
    # ("ia", _("Interlingua")),
    ("id", _("Indonesian")),
    # ("ig", _("Igbo")),
    # ("io", _("Ido")),
    # ("is", _("Icelandic")),
    ("it", _("Italian")),
    ("ja", _("Japanese")),
    # ("ka", _("Georgian")),
    # ("kab", _("Kabyle")),
    # ("kk", _("Kazakh")),
    # ("km", _("Khmer")),
    # ("kn", _("Kannada")),
    ("ko", _("Korean")),
    # ("ky", _("Kyrgyz")),
    # ("lb", _("Luxembourgish")),
    ("lt", _("Lithuanian")),
    ("lv", _("Latvian")),
    # ("mk", _("Macedonian")),
    # ("ml", _("Malayalam")),
    # ("mn", _("Mongolian")),
    # ("mr", _("Marathi")),
    # ("ms", _("Malay")),
    # ("my", _("Burmese")),
    ("nb", _("Norwegian Bokm√•l")),
    # ("ne", _("Nepali")),
    ("nl", _("Dutch")),
    ("nn", _("Norwegian Nynorsk")),
    # ("os", _("Ossetic")),
    # ("pa", _("Punjabi")),
    ("pl", _("Polish")),
    ("pt", _("Portuguese")),
    ("pt-br", _("Brazilian Portuguese")),
    ("ro", _("Romanian")),
    ("ru", _("Russian")),
    ("sk", _("Slovak")),
    ("sl", _("Slovenian")),
    # ("sq", _("Albanian")),
    # ("sr", _("Serbian")),
    # ("sr-latn", _("Serbian Latin")),
    ("sv", _("Swedish")),
    # ("sw", _("Swahili")),
    # ("ta", _("Tamil")),
    # ("te", _("Telugu")),
    # ("tg", _("Tajik")),
    # ("th", _("Thai")),
    # ("tk", _("Turkmen")),
    ("tr", _("Turkish")),
    # ("tt", _("Tatar")),
    # ("udm", _("Udmurt")),
    # ("ug", _("Uyghur")),
    ("uk", _("Ukrainian")),
    # ("ur", _("Urdu")),
    # ("uz", _("Uzbek")),
    # ("vi", _("Vietnamese")),
    ("zh-hans", _("Simplified Chinese")),
    ("zh-hant", _("Traditional Chinese")),
)

# Languages using BiDi (right-to-left) layout
LANGUAGES_BIDI = ["he", "ar", "ar-dz", "ckb", "fa", "ug", "ur"]

LOCALE_PATHS = (BASE_DIR / "locale",)

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"
# STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [BASE_DIR / "static/"]

# Default URL on which Django application runs for specific environment
BASE_URL = config("BASE_URL", default="http://127.0.0.1:8000")

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Email server configuration
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_HOST = config("EMAIL_HOST")
EMAIL_HOST_USER = config("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD")
EMAIL_PORT = config("EMAIL_PORT")
EMAIL_USE_TLS = config("EMAIL_USE_TLS")
DEFAULT_FROM_EMAIL = config("DEFAULT_FROM_EMAIL")

LOGIN_REDIRECT_URL = "../"
LOGIN_URL = "login/"
LOGOUT_URL = "logout/"

MEDIA_URL = "media/"
MEDIA_ROOT = BASE_DIR / "media"

ROSETTA_STORAGE_CLASS = "rosetta.storage.CacheRosettaStorage"
ROSETTA_ENABLE_TRANSLATION_SUGGESTIONS = "True"
DEEPL_AUTH_KEY = config("DEEPL_API_KEY")
DEEPL_LANGUAGES = {
    "ar": "ar",  # Arabic
    "bg": "bg",  # Bulgarian
    "cs": "cs",  # Czech
    "da": "da",  # Danish
    "de": "de",  # German
    "en": "en-us",  # English
    "en_gb": "en-gb",  # GB English
    "es": "es",  # Spanish
    "et": "et",  # Estonian
    "fi": "fi",  # Finnish
    "fr": "fr",  # French
    "gr": "el",  # Greek
    "hu": "hu",  # Hungarian
    "id": "id",  # Indonesian
    "it": "it",  # Italian
    "ja": "ja",  # Japanese
    "ko": "ko",  # Korean
    "lt": "lt",  # Lithuanian
    "lv": "lv",  # Latvian
    "nb": "nb",  # Norvegian
    "nl": "nl",  # Dutch
    "pl": "pl",  # Polish
    "pt": "pt-pt",  # Portuguese
    "pt_br": "pt-br",  # Brazilian
    "ro": "ro",  # Romanian
    "ru": "ru",  # Russian
    "sk": "sk",  # Slovak
    "sl": "sl",  # Slovenian
    "sv": "sv",  # Swedish
    "tr": "tr",  # Turkish
    "uk": "uk",  # Urkainian
    "zh_hans": "zh-hans",  # Simplified Chinese
    "zh_hant": "zn-hant",  # Traditional Chinese
}

# Template Settings
# THEME_LAYOUT_DIR = THEME_LAYOUT_DIR
# TEMPLATE_CONFIG = TEMPLATE_CONFIG
# THEME_VARIABLES = THEME_VARIABLES

INTERNAL_IPS = [
    "127.0.0.1",
]


REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly",
    ],
}

ASGI_APPLICATION = "AIMER2.asgi.application"

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}
